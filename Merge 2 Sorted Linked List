#include <bits/stdc++.h>
using namespace std;
struct Node{
    int val;
    Node* next;
};

Node* ConstructList(vector<int> v){
    Node* head=nullptr;
    for(int i=v.size()-1;i>=0;i--){
        Node* node=new Node;
        node->val=v[i];
        node->next=head;
        head=node;
    }
    return head;

}
     Node* Merge(Node* list1, Node* list2){
          Node* temp=list1,*temp1=list2,*s,*head;
        if(temp==NULL)   return list2;
        if(temp1==NULL)  return list1;
        if(temp->val<temp1->val)  {
            s=temp;
            head=temp;
            temp=temp->next;
        }
        else {
            s=temp1;
            head=temp1;
            temp1=temp1->next;
        }
        while(temp!=NULL && temp1!=NULL){
            if(temp->val<temp1->val){
                s->next=temp;
                s=temp;
                temp=temp->next;
            }
            else{
                s->next=temp1;
                s=temp1;
                temp1=temp1->next;
            }
        }
        if(temp!=NULL) s->next=temp;
        else if(temp1!=NULL)  s->next=temp1;
        return head;
     }

     void print(Node* head){
         Node* temp=head;
         while(temp!=NULL){
             cout<<temp->val<<"->";
             temp=temp->next;
         }
     }
int main(){
    int n;  cin>>n;  //Size of Linked List
    vector<int> v(n);//Elements of Vector
    for(int i=0;i<n;i++)  cin>>v[i];

      int m;  cin>>m;  //Size of Linked List
    vector<int> v1(m);//Elements of Vector
    for(int i=0;i<m;i++)  cin>>v1[i];

   //Create 1st Linked List 
    Node* head1=ConstructList(v);

    //Create 1st Linked List 
    Node* head2=ConstructList(v1);

   //Merge Sorted Linked List
    Node* node=Merge(head1,head2);

    print(node);
   
}
