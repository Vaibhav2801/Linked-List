#include <bits/stdc++.h>
using namespace std;
struct Node{
    int val;
    Node* next;
};

Node* ConstructList(vector<int> v){
    Node* head=nullptr;
    for(int i=v.size()-1;i>=0;i--){
        Node* node=new Node;
        node->val=v[i];
        node->next=head;
        head=node;
    }
    return head;

}

  int get_decimal(Node* head) {
        Node* temp=head;
        int ans=0;
        while(temp !=NULL){
              ans=(ans<<1)+temp->val;
            temp=temp->next;
        }
        return ans;
    }
       Node* get_middle(Node* head) {
         int x=0;
        Node* temp=head;
        while(temp!=NULL)  {
            x++;
            temp=temp->next;
        }
        x=(x/2)+1;
        x--;
        temp=head;
        while(x--){
            temp=temp->next;
        }
        return temp;
    }
     Node* reverse(Node* head){
         Node* current,*prev,*nex;
         prev=NULL;
         current=head;
         while(current!=NULL){
             nex=current->next;
              current->next=prev;
              prev=current;
              current=nex;
         }
         head=prev;
         return head;
     }
     void print(Node* head){
         Node* temp=head;
         while(temp!=NULL){
             cout<<temp->val<<"->";
             temp=temp->next;
         }
     }
int main(){
    int n;  cin>>n;  //Size of Linked List
    vector<int> v(n);//Elements of Vector
    for(int i=0;i<n;i++)  cin>>v[i];

   //Create Linked List 
    Node* head=ConstructList(v);
    print(head);
    cout<<endl;
    //Reverse alinked list
    Node* node=reverse(head);
    print(node);
}
