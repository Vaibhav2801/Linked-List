#include <bits/stdc++.h>
using namespace std;
struct Node{
    int val;
    Node* next;
};

Node* ConstructList(vector<int> v){
    Node* head=nullptr;
    for(int i=v.size()-1;i>=0;i--){
        Node* node=new Node;
        node->val=v[i];
        node->next=head;
        head=node;
    }
    return head;

}
    bool palindrome(Node* head){
          Node* temp=head;
        int c=0;
        while(temp!=NULL){
            c++;
            temp=temp->next;
        }
        Node* headB=head;
         int x=c/2;
        while(x--)   headB=headB->next;
        if(c%2!=0)  headB=headB->next;
        Node* current=head,*prev=NULL,*next;
        x=c/2;
        
         while(current!=NULL && x--){
             next=current->next;
             current->next=prev;
             prev=current;
             current=next;
         }
        head=prev;
         x=c/2;
     temp=head;
       Node *temp1=headB;
        while(temp!=NULL && temp1!=NULL){
            if(temp->val !=temp1->val)  break;
            x--;
            temp=temp->next;
            temp1=temp1->next;
        }
        if(x!=0)   return false;
        return true;
     }
int main(){
    int n;  cin>>n;  //Size of Linked List
    vector<int> v(n);//Elements of Vector
    for(int i=0;i<n;i++)  cin>>v[i];

   //Create 1st Linked List 
    Node* head1=ConstructList(v);


   //Check Palindrome
    cout<<palindrome(head1)<<endl;;
    
     }
